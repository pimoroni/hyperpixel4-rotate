#!/bin/bash

UTILITY="hyperpixel4-rotate (Square)"
ORIENTATION=$1
DO_XORG=$2
DEVICE="EP0110M09"
UDEV_FILE="/etc/udev/rules.d/98-hyperpixel4-square-calibration.rules"
DISP_FILE="/usr/share/dispsetup.sh"
XORG_TOUCH_CONF_FILE="/usr/share/X11/xorg.conf.d/88-hyperpixel4-square-touch.conf"
XORG_CONF_FILE="/usr/share/X11/xorg.conf.d/88-dpi-1-rotate.conf"
LIGHTDM_CONF_FILE="/etc/lightdm/lightdm.conf"
XHOST_AUTH_DISABLED=false

function success() {
    echo -e "$(tput setaf 2)$1$(tput sgr0)"
}

function inform() {
    echo -e "$(tput setaf 6)$1$(tput sgr0)"
}

function warning() {
    echo -e "$(tput setaf 1)$1$(tput sgr0)"
}

function compatibility_check {
    grep -e "^dtoverlay=vc4-kms-dpi-hyperpixel4sq.*" /boot/config.txt > /dev/null
    if [ $? -ne 0 ]; then
        warning "HyperPixel 4 Square is not enabled."
        inform "Ensure \"dtoverlay=vc4-kms-dpi-hyperpixel4sq\" is enabled in /boot/config.txt"
        inform "Note: Rotation requires a Pi 4 or Pi 400"
        exit 1
    fi
}

function set_xorg_conf {
    inform "Rotating display $1";
    xrandr --output DPI-1 --rotate $1

    inform "Setting libinput Calibration Matrix: 1 0 0 0 1 0";
    xinput set-prop "pointer:$DEVICE" "libinput Calibration Matrix" 1 0 0 0 1 0 0 0 1

    inform "Setting Coordinate Transformation Matrix: $2 $3 $4 $5 $6 $7";
    xinput set-prop "pointer:$DEVICE" "Coordinate Transformation Matrix" $2 $3 $4 $5 $6 $7 0 0 1

    inform "Saving xorg touch config to $XORG_TOUCH_CONF_FILE";
    sudo tee $XORG_TOUCH_CONF_FILE > /dev/null <<EOF
# Auto generated by $UTILITY, edit with care!

Section "InputClass"
    Identifier "HyperPixel4 Square ($DEVICE)"
    MatchProduct "$DEVICE"
    Option "CalibrationMatrix" "1 0 0 0 1 0 0 0 1"
    Option "TransformationMatrix" "$2 $3 $4 $5 $6 $7 0 0 1"
EndSection
EOF

    inform "Saving xorg display config to $XORG_CONF_FILE";
    sudo tee $XORG_CONF_FILE > /dev/null <<EOF
# Auto generated by $UTILITY, edit with care!

Section "Monitor"
    Identifier "DPI-1"
    Option "Rotate" "$1"
EndSection
EOF

    grep -e "^display-setup-script=$DISP_FILE*" $LIGHTDM_CONF_FILE > /dev/null
    if [ $? -eq 0 ]; then
        warning "You might want to comment-out \"display-setup-script\" from $LIGHTDM_CONF_FILE\n"
    fi
}

function set_matrix {
    inform "Setting touch transform matrix: $1 $2 $3 $4 $5 $6";
    xinput set-prop "pointer:$DEVICE" "libinput Calibration Matrix" $1 $2 $3 $4 $5 $6 0 0 1

    inform "Saving touch settings to $UDEV_FILE";
    echo "ATTRS{name}==\"$DEVICE\", ENV{LIBINPUT_CALIBRATION_MATRIX}=\"$1 $2 $3 $4 $5 $6\"" | sudo tee $UDEV_FILE > /dev/null
}

function xhost_auth {
    if [ "$1" == "disable" ]; then
        xhost | grep disabled > /dev/null
        if [ $? -ne 0 ]; then
            xhost + > /dev/null
	    warning "Disabling xhost access control..."
            XHOST_AUTH_DISABLED=true
        fi
    fi
    if [ "$1" == "enable" ] && [ "$XHOST_AUTH_DISABLED" = true ]; then
        xhost - > /dev/null
	warning "Re-enabling xhost access control..."
    fi
}

function set_display {
    xhost_auth "disable"
    inform "Rotating display $1";
    xrandr --output DPI-1 --rotate $1

    grep -e "^display-setup-script=$DISP_FILE*" $LIGHTDM_CONF_FILE > /dev/null
    if [ $? -ne 0 ]; then
        warning "The display setup script is not configured in $LIGHTDM_CONF_FILE so your saved settings *will not be restored upon reboot*"
        warning "Maybe you're not using Raspberry Pi OS/lightdm?"
        warning "Add \"display-setup-script=$DISP_FILE\" to $LIGHTDM_CONF_FILE or use the Xorg config method (add --xorg to this command)\n"
    fi

    inform "Saving display settings to $DISP_FILE";
    sudo chown `whoami` $DISP_FILE
    python - <<EOF
import os
import stat
from screenlayout import xrandr

file = "$DISP_FILE"

template = ["#!/bin/sh",
"if grep -q okay /proc/device-tree/soc/v3d@7ec00000/status 2> /dev/null || grep -q okay /proc/device-tree/soc/firmwarekms@7e600000/status 2> /dev/null ; then",
"if %(xrandr)s --dryrun ; then",
"%(xrandr)s",
"fi",
"fi",
"exit 0"]

x = xrandr.XRandR()
x.load_from_x()
data = x.save_to_shellscript_string(template=template)
open(file, 'w').write(data)
os.chmod(file, stat.S_IRWXU)
EOF
    STATUS=$?
    sudo chown root $DISP_FILE
    sudo chmod 755 $DISP_FILE
    if [ $STATUS -eq 1 ]; then
        warning "Failed to persist display orientation."
        warning "Make sure you're running Rasperry Pi OS desktop on a Pi 4 or Pi 400"
        xhost_auth "enable"
        exit 1
    fi

    if [ -f $XORG_CONF_FILE ]; then
        warning "There may be conflicting config in $XORG_CONF_FILE"
        warning "You might want to remove this file!"
    fi

    if [ -f $XORG_TOUCH_CONF_FILE ]; then
        warning "There may be conflicting config in $XORG_TOUCH_CONF_FILE"
        warning "You might want to remove this file!"
    fi

    xhost_auth "enable"
}

printf "HyperPixel 4: Square - Display/Touch Rotation\n"
printf "This rotate utility only works with the Raspberry Pi OS desktop version or X-based alternatives.\n\n"

compatibility_check

if [ "$DISPLAY" == "" ]; then
    inform "No DISPLAY variable set, trying :0.0"
    export DISPLAY=:0.0
fi

if [ "$ORIENTATION" == "right" ]; then
    if [ "$DO_XORG" == "--xorg" ]; then
        set_xorg_conf $ORIENTATION 0 1 0 -1 0 1
    else
        set_display $ORIENTATION
        set_matrix 0 1 0 -1 0 1
    fi
    exit 0
fi

if [ "$ORIENTATION" == "left" ]; then
    if [ "$DO_XORG" == "--xorg" ]; then
        set_xorg_conf $ORIENTATION 0 -1 1 1 0 0
    else
        set_display $ORIENTATION
        set_matrix 0 -1 1 1 0 0
    fi
    exit 0
fi

if [ "$ORIENTATION" == "inverted" ]; then
    if [ "$DO_XORG" == "--xorg" ]; then
        set_xorg_conf $ORIENTATION -1 0 1 0 -1 1
    else
        set_display $ORIENTATION
        set_matrix -1 0 1 0 -1 1
    fi
    exit 0
fi

if [ "$ORIENTATION" == "normal" ]; then
    if [ "$DO_XORG" == "--xorg" ]; then
        set_xorg_conf $ORIENTATION 1 0 0 0 1 0
    else
        set_display $ORIENTATION
        set_matrix 1 0 0 0 1 0
    fi
    exit 0
fi

printf "Unsupported orientation: $ORIENTATION\n";
printf "Try one of: left, right, normal, inverted\n";
